import React, { Component } from 'react'
import { observer, inject } from 'mobx-react'
import { FormGroup, Content, Svg, FlexGrid } from 'components'
import { classNames } from 'helpers'
import s from './Defender.sass'

import logoIcon from 'icons/logo.svg'
import lockIcon from 'icons/ui/lock.svg'

const description = (
  <span>
    –ö–∞–∂–¥—ã–π 10 –∏–∑ –ø–µ—Ä–≤–æ–π 1000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–∞—Ç 100‚ÇΩ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω üíØüíØüíØ <br/> <br/>
    –ì–¥–µ –∏—Å–∫–∞—Ç—å –ø–∞—Ä–æ–ª—å? üïµ <br/>
    –ò—â–∏—Ç–µ –≤ —Å–µ—Ç–∏, —Å–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —É –¥—Ä—É–∑–µ–π, –∑–Ω–∞–∫–æ–º—ã—Ö, –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –≥—Ä—É–ø–ø –∏ –ø–∞–±–ª–∏–∫–æ–≤ ‚Äî –ø–æ–º–Ω–∏—Ç–µ –æ–Ω –≥–¥–µ-—Ç–æ —Ä—è–¥–æ–º!üë£
  </span>
);
const descriptionContent = `
–ö–∞–∂–¥—ã–π 10 –∏–∑ –ø–µ—Ä–≤–æ–π 1000 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–∞—Ç 100‚ÇΩ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–ΩüíØüíØüíØ
–ì–¥–µ –∏—Å–∫–∞—Ç—å –ø–∞—Ä–æ–ª—å? üïµüèø 
–ò—â–∏—Ç–µ –≤ —Å–µ—Ç–∏, —Å–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —É –¥—Ä—É–∑–µ–π, –∑–Ω–∞–∫–æ–º—ã—Ö, –≤ –ø–∞–±–ª–∏–∫–∞—Ö –≤—Ä–æ–¥–µ '–ø–æ–¥—Å–ª—É—à–∞–Ω–æ' –∏ –ø–æ–º–Ω–∏—Ç–µ –æ–Ω –≥–¥–µ-—Ç–æ —Ä—è–¥–æ–º!üë£
`;

const mapStateToProps = ({device: {width, height}}) => ({
  width: `${width}px`, height: `${height}px`,
});

@inject(mapStateToProps) @observer
export default class Defender extends Component {
  static description = descriptionContent;
  submitHandler = e => {
    e.preventDefault();

    this.props.onSubmit();

    return false;
  };

  onFocus = () => {
    this.props.onCleanUp();
  };

  render() {
    const {
      width, height,
      isError, isFetching,
      onChange
    } = this.props;

    return (
      <FlexGrid direction="column" justify="center" align="center"
                className={s.defender} style={{width, height}}>
        <form className={classNames(s.wrapper, isFetching && s.fetch)} onSubmit={this.submitHandler}>
          <div className={s.logo}>
            <Svg src={logoIcon} className={s.logo__icon}/>
          </div>
          <FormGroup onChange={onChange} isError={isError} msg={isError}
                     onFocus={this.onFocus} wrapperClassName={s.input}
                     name="yoap-password"
                     theme="transparent" placeholder="Password*"
                     type="password" required>
            {!isError && <Svg src={lockIcon} className={s.lock_icon}/>}
          </FormGroup>
          <Content white>{description}</Content>
        </form>
      </FlexGrid>
    )
  }
}

